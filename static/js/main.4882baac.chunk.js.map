{"version":3,"sources":["containers/App/background.jpg","containers/App/background-90.jpg","containers/App/background-80.jpg","containers/App/App.jsx","registerServiceWorker.js","index.js"],"names":["Root","styled","div","backgroundImageUrl","backgroundImageUrl90","backgroundImageUrl80","TextBlock","Name","h1","Description","p","DescriptionLink","a","Copyright","AlfabankLink","href","target","rel","Links","SocietyLinkTag","BackgroundShadow","SocietyLink","children","App","className","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAAe,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,0C,OCMnCA,EAAOC,IAAOC,IAAV,ufAKiBC,EAUEC,EAIAC,GAIvBC,EAAYL,IAAOC,IAAV,oMAYTK,EAAON,IAAOO,GAAV,qJAUJC,EAAcR,IAAOS,EAAV,okBAiBXC,EAAkBV,IAAOW,EAAV,0BAEfC,EAAYZ,IAAOS,EAAV,uMAaTI,EAAe,kBACnB,cAACH,EAAD,CAAiBI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,WAAhE,0BAKIC,EAAQjB,IAAOC,IAAV,gRAgBLiB,EAAiBlB,IAAOW,EAAV,2JAadQ,EAAmBnB,IAAOC,IAAV,0NAWhBmB,EAAc,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMO,EAAT,EAASA,SAAT,OAClB,cAACH,EAAD,CAAgBJ,KAAMA,EAAMC,OAAO,SAASC,IAAI,WAAhD,SACGK,KAIQC,EAAb,4JACE,WACE,OACE,eAACvB,EAAD,WACE,cAACoB,EAAD,IACA,eAACd,EAAD,8BAEE,cAACC,EAAD,kCACA,eAACE,EAAD,mCACuB,cAAC,EAAD,UAGzB,cAACI,EAAD,6CACA,eAACK,EAAD,WACE,cAAC,EAAD,CAAaH,KAAK,4BAAlB,SACE,mBAAGS,UAAU,gBAEf,cAAC,EAAD,CAAaT,KAAK,uCAAlB,SACE,mBAAGS,UAAU,uBAEf,cAAC,EAAD,CAAaT,KAAK,iCAAlB,SACE,mBAAGS,UAAU,oBAEf,cAAC,EAAD,CAAaT,KAAK,8BAAlB,SACE,mBAAGS,UAAU,gCAxBzB,GAAyBC,aC7HLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDyG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4882baac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.6d6ce5e3.jpg\";","export default __webpack_public_path__ + \"static/media/background-90.6d6ce5e3.jpg\";","export default __webpack_public_path__ + \"static/media/background-80.6d6ce5e3.jpg\";","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport backgroundImageUrl from \"./background.jpg\";\r\nimport backgroundImageUrl90 from \"./background-90.jpg\";\r\nimport backgroundImageUrl80 from \"./background-80.jpg\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: 100vh;\r\n  align-items: center;\r\n  background-image: url(\"${backgroundImageUrl}\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    justify-content: center;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1366px) {\r\n    background-image: url(\"${backgroundImageUrl90}\");\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    background-image: url(\"${backgroundImageUrl80}\");\r\n  }\r\n`;\r\n\r\nconst TextBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 0 0 128px;\r\n  color: white;\r\n  z-index: 1;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    margin: 8px;\r\n  }\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-size: 64px;\r\n  width: 100%;\r\n  margin: 0;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 4px;\r\n  font-weight: 200;\r\n  font-size: 24px;\r\n  background: #47ffd1; /* Old Browsers */\r\n  background: -webkit-linear-gradient(left, #47ffd1, #174d32); /*Safari 5.1-6*/\r\n  background: -o-linear-gradient(left, #47ffd1, #174d32); /*Opera 11.1-12*/\r\n  background: -moz-linear-gradient(left, #47ffd1, #174d32); /*Fx 3.6-15*/\r\n  background: linear-gradient(to right, #47ffd1, #174d32); /*Standard*/\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst DescriptionLink = styled.a``;\r\n\r\nconst Copyright = styled.p`\r\n  position: absolute;\r\n  right: 32px;\r\n  bottom: 32px;\r\n  color: white;\r\n  margin: 0;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    right: 8px;\r\n    bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst AlfabankLink = () => (\r\n  <DescriptionLink href=\"https://alfabank.ru\" target=\"_blank\" rel=\"noopener\">\r\n    alfabank.ru\r\n  </DescriptionLink>\r\n);\r\n\r\nconst Links = styled.div`\r\n  color: white;\r\n  position: absolute;\r\n  bottom: 32px;\r\n  left: 32px;\r\n  font-size: 28px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    bottom: 8px;\r\n    left: 8px;\r\n  }\r\n`;\r\n\r\nconst SocietyLinkTag = styled.a`\r\n  color: white;\r\n  margin-bottom: 6px;\r\n\r\n  :last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  :visited {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst BackgroundShadow = styled.div`\r\n  position: absolute;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    background-color: rgba(0, 0, 0, 0.66);\r\n  }\r\n`;\r\n\r\nconst SocietyLink = ({ href, children }) => (\r\n  <SocietyLinkTag href={href} target=\"_blank\" rel=\"noopener\">\r\n    {children}\r\n  </SocietyLinkTag>\r\n);\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <Root>\r\n        <BackgroundShadow />\r\n        <TextBlock>\r\n          Hi, I'm @romarus\r\n          <Name>Khisamutdinov Rinas</Name>\r\n          <Description>\r\n            Software engineer at <AlfabankLink />\r\n          </Description>\r\n        </TextBlock>\r\n        <Copyright>Background by Tomislav Jakupec</Copyright>\r\n        <Links>\r\n          <SocietyLink href=\"https://vk.com/id33255365\">\r\n            <i className=\"fab fa-vk\" />\r\n          </SocietyLink>\r\n          <SocietyLink href=\"https://www.instagram.com/rinas.kaa/\">\r\n            <i className=\"fab fa-instagram\" />\r\n          </SocietyLink>\r\n          <SocietyLink href=\"https://github.com/devromarus/\">\r\n            <i className=\"fab fa-github\" />\r\n          </SocietyLink>\r\n          <SocietyLink href=\"https://telegram.me/rinaska\">\r\n            <i className=\"fab fa-telegram\" />\r\n          </SocietyLink>\r\n        </Links>\r\n      </Root>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App }from './containers/App';\r\nimport { unregister } from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nunregister();\r\n"],"sourceRoot":""}